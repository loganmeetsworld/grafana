---
cog_bundle_version: 5
name: grafana
description: Grafana Graphs in Chat.
long_description: >
  This bundle provides commands for viewing and inspecting Grafana graphs in Slack. To communication with the Grafana API and save these graphs as png's in S3, we use the aws-sdk library in Ruby. Permissions are set up for Cog to write to a specific bucket in s3.
version: 0.2.36
docker:
  image: "kickstarter/grafana"
  tag: "latest"
config:
  notes: >
    When creating the IAM access key for use with Cog, we have to make sure the user's key has the permissions to write to a specific S3 bucket.
  env:
  - var: GRAFANA_URL
    description: "URL to your Grafana instance"
  - var: GRAFANA_API_KEY
    description: "API key for your Grafana instance"
  - var: GRAFANA_S3_BUCKET
    description: "s3 bucket name"
  - var: GRAFANA_S3_PATH
    description: "s3 path name"
commands:
  dashboards:
    executable: "/home/bundle/cog-command"
    description: List Grafana dashboards, can take tag
    examples: |
      List all dashboards:

      dashboards

      List dashboards associated with a tag:

      dashboards kickstarter
    rules:
      - allow
  panels:
    executable: "/home/bundle/cog-command"
    description: List panels in a dashboard
    examples: |
      List all panels for a dashboard:

      panels kickstarter-overview
    rules:
      - allow
  graph:
    executable: "/home/bundle/cog-command"
    description: View a graph
    examples: |
      View a graph:

      graph kickstarter-overview logins

      View a graph for a specified amount of hours:

      graph kickstarter-overview logins 6

      View a templated overview for a specific node:

      graph telegraf-host-overview load-averages 1 ip-10-144-225-121
    rules:
      - allow
templates:
  dashboards: 
    body: |
      ~each var=$results as=dashboard~
      :sparkles: ~$dashboard.slug~
      ~end~
  panels: 
    body: |
      ~each var=$results as=panel~
      :sparkles: ~$panel.slug~
      ~end~
  graph:
    body: |
      ~each var=$results as=graph~
      Dashboard: ~$graph.dash_url~
      Panel: ~$graph.panel_url~
      ~$graph.graph_img~
      ~end~
